---
format_version: '13'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
workflows:
  success_test:
    steps:
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            # write your script here
            exit 0
    - script@1:
        inputs:
        - content: |
            #!/bin/env bash
            set -ex

            # Creating a sub-directory for the test run within the BITRISE_TEST_RESULT_DIR:

            test_run_dir="$BITRISE_TEST_RESULT_DIR/result_dir_1"
            mkdir "$test_run_dir"

            # Exporting the JUnit XML test report:
            cat << EOF > "$test_run_dir/UnitTest.xml"
            <?xml version="1.0" encoding="UTF-8"?>
            <testsuites>
                <testsuite name="ExampleTestSuite" tests="${BITRISE_BUILD_STATUS}" failures="${BITRISE_BUILD_STATUS}" errors="0" skipped="0" timestamp="2023-10-05T12:00:00" time="0.123">
                </testsuite>
            </testsuites>
            EOF

            # Creating the test-info.json file with the name of the test run defined:

            echo '{"test-name":""}' >> "$test_run_dir/test-info.json"
        is_always_run: true
        title: Dummy Report
    - deploy-to-bitrise-io@2: {}
  failure_test:
    steps:
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            # write your script here
            exit 1
    - script@1:
        inputs:
        - content: |
            #!/bin/env bash
            set -ex

            # Creating a sub-directory for the test run within the BITRISE_TEST_RESULT_DIR:

            test_run_dir="$BITRISE_TEST_RESULT_DIR/result_dir_1"
            mkdir "$test_run_dir"

            # Exporting the JUnit XML test report:
            cat << EOF > "$test_run_dir/UnitTest.xml"
            <?xml version="1.0" encoding="UTF-8"?>
            <testsuites>
                <testsuite name="ExampleTestSuite" tests="${BITRISE_BUILD_STATUS}" failures="${BITRISE_BUILD_STATUS}" errors="0" skipped="0" timestamp="2023-10-05T12:00:00" time="0.123">
                </testsuite>
            </testsuites>
            EOF

            # Creating the test-info.json file with the name of the test run defined:

            echo '{"test-name":""}' >> "$test_run_dir/test-info.json"
        is_always_run: true
        title: Dummy Report
    - deploy-to-bitrise-io@2: {}    
meta:
  bitrise.io:
    stack: osx-xcode-16.0.x
    machine_type_id: g2-m1.4core
app:
  status_report_name: 'Executing Report Tests <target_id> for <project_title>'
  envs:
  - BITRISE_PROJECT_PATH: Addly.xcodeproj
    opts:
      is_expand: false
  - BITRISE_SCHEME: Addly
    opts:
      is_expand: false
  - BITRISE_DISTRIBUTION_METHOD: ad-hoc
    opts:
      is_expand: false
pipelines:
  main-pipeline:
    workflows:
      success_test: {}
      failure_test: {}
    triggers:
      pull_request:
      - target_branch: main
